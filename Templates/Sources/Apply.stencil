//: `<*>` definitions; requires `concrete`

import Operadics

{% for type in types.protocols|annotated:"<*>"|annotated:"concrete" %}
// MARK: - {{ type.name }}

public func <*> <A,B,T{% if type.annotations.context %},Z{% endif %}> (left: A, right: B) -> {{ type.annotations.concrete }}<T{% if type.annotations.context %},Z{% endif %}> where A: {{ type.name }}, B: {{ type.name }}, A.ElementType == (B.ElementType) -> T{% if type.annotations.context %}, A.{{ type.annotations.context }} == Z, B.{{ type.annotations.context }} == Z{% endif %}{% if type.annotations.contextRequiredProtocols %}, Z: {{ type.annotations.contextRequiredProtocols }}{% endif %} {
  	return zip(left,right).map { $0($1) }
}

{% endfor %}
